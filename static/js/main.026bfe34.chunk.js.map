{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","components/Todos.tsx","App.tsx","index.tsx"],"names":["Header","props","notDoneTodos","useStore","todos","filter","todo","done","className","data-testid","length","Footer","setFilter","FilterButton","value","selectedValue","setValue","onClick","Todos","setTodos","todoRef","useRef","type","placeholder","ref","current","newTodo","message","getFilterFunction","map","i","key","toggleDone","splice","removeTodo","create","persist","set","name","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.026bfe34.chunk.js","sourcesContent":["import React from \"react\";\nimport { ChevronDoubleDownIcon } from \"@heroicons/react/solid\";\nimport { UseStore } from \"zustand\";\nimport { AppState } from \"../types\";\n\ntype Props = {\n  useStore: UseStore<AppState>;\n};\n\nexport default function Header(props: Props) {\n  const { todos } = props.useStore();\n  const notDoneTodos = todos.filter((todo) => !todo.done);\n\n  return (\n    <header className=\"flex flex-col items-center mt-8\">\n      <p className=\"text-green-300 text-3xl font-black mx-4 px-2\">\n        Welcome back!\n      </p>\n\n      <p className=\"text-indigo-300\" data-testid=\"tasks-left\">\n        You have {notDoneTodos.length} new task\n        {notDoneTodos.length !== 1 && \"s\"} today\n      </p>\n\n      <ChevronDoubleDownIcon className=\"animate-bounce w-6 h-6 text-indigo-300 my-4\" />\n    </header>\n  );\n}\n","import React from \"react\";\nimport { CloudIcon } from \"@heroicons/react/solid\";\nimport { UseStore } from \"zustand\";\nimport { AppState, Filter } from \"../types\";\n\ntype Props = {\n  useStore: UseStore<AppState>;\n};\n\nexport default function Footer(props: Props) {\n  const { filter, setFilter } = props.useStore();\n\n  return (\n    <footer className=\"flex flex-row justify-center my-8 gap-8\">\n      <FilterButton value=\"All\" selectedValue={filter} setValue={setFilter} />\n      <FilterButton\n        value=\"Active\"\n        selectedValue={filter}\n        setValue={setFilter}\n      />\n      <FilterButton value=\"Done\" selectedValue={filter} setValue={setFilter} />\n    </footer>\n  );\n}\n\ntype FilterButtonProps = {\n  value: Filter;\n  selectedValue: Filter;\n  setValue: (value: Filter) => void;\n};\n\nfunction FilterButton({ value, selectedValue, setValue }: FilterButtonProps) {\n  return (\n    <button\n      onClick={() => setValue(value)}\n      className={`\n        flex\n        flex-col\n        items-center\n        w-20\n        focus:outline-none\n        rounded-full\n        border-2\n        border-dashed\n        ${value === selectedValue ? \"border-indigo-300\" : \"border-transparent\"}\n      `}\n    >\n      <CloudIcon className=\"w-6 h-6 text-indigo-300\" />\n      <p className=\"text-green-200 font-black text-sm\">{value}</p>\n    </button>\n  );\n}\n","import React, { useRef } from \"react\";\nimport {\n  ClipboardListIcon,\n  CheckCircleIcon,\n  XCircleIcon,\n} from \"@heroicons/react/solid\";\nimport { UseStore } from \"zustand\";\nimport { AppState, Filter, Todo } from \"../types\";\n\ntype Props = {\n  useStore: UseStore<AppState>;\n};\n\nexport default function Todos(props: Props) {\n  const { todos, setTodos, filter } = props.useStore();\n  const todoRef = useRef<HTMLInputElement>(null);\n\n  function tryAddTodo() {\n    if (todoRef.current?.value) {\n      const newTodo = { done: false, message: todoRef.current.value };\n      setTodos([...todos, newTodo]);\n      todoRef.current.value = \"\";\n    }\n  }\n\n  function removeTodo(i: number) {\n    todos.splice(i, 1);\n    setTodos(todos);\n  }\n\n  function toggleDone(i: number) {\n    const todo = todos[i];\n    todo.done = !todo.done;\n    setTodos(todos);\n  }\n\n  return (\n    <main\n      className=\"\n        flex\n        flex-col\n        items-center\n        max-w-4xl\n        box-border\n        border-2\n        border-indigo-100\n        shadow-lg\n        rounded-lg\n        p-6\n      \"\n    >\n      <div className=\"flex flex-row justify-center items-center\">\n        <ClipboardListIcon className=\"w-9 h-9 text-indigo-300\" />\n        <p className=\"text-indigo-400 text-xl font-bold\">TODO</p>\n      </div>\n\n      <div className=\"flex space-x-6\">\n        <input\n          data-testid=\"input\"\n          className=\"placeholder-green-200 font-black text-2xl text-green-300 my-4 p-2\"\n          type=\"text\"\n          placeholder=\"What needs to be done?\"\n          ref={todoRef}\n        />\n        <button\n          data-testid=\"addTodo\"\n          className=\"\n            text-blue-600\n            text-sm\n            font-bold\n            text-opacity-75\n            ring\n            ring-offset-4\n            ring-offset-green-100\n            focus:outline-none\n            rounded-full\n            my-8\n            px-2\n          \"\n          onClick={tryAddTodo}\n        >\n          Add New Task\n        </button>\n      </div>\n\n      <div className=\"w-full\" data-testid=\"container\">\n        {todos.filter(getFilterFunction(filter)).map((todo, i) => (\n          <div key={i} className=\"flex my-2\">\n            <button\n              onClick={() => toggleDone(i)}\n              className=\"focus:outline-none\"\n            >\n              {todo.done ? (\n                <CheckCircleIcon className=\"w-6 h-6 text-indigo-300\" />\n              ) : (\n                <div className=\"w-6 h-6 rounded-full border border-indigo-300\"></div>\n              )}\n            </button>\n\n            <p\n              className={`flex-grow overflow-ellipsis font-bold mx-4 ${\n                todo.done ? \"line-through text-indigo-200\" : \"text-indigo-400\"\n              }`}\n            >\n              {todo.message}\n            </p>\n\n            <button\n              onClick={() => removeTodo(i)}\n              className=\"focus:outline-none\"\n            >\n              <XCircleIcon className=\"w-6 h-6 text-indigo-300\" />\n            </button>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n}\n\nfunction getFilterFunction(filter: Filter): (todo: Todo) => boolean {\n  if (filter === \"Active\") {\n    return (todo) => !todo.done;\n  }\n  if (filter === \"Done\") {\n    return (todo) => todo.done;\n  }\n  return () => true;\n}\n","import React from \"react\";\nimport create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Todos from \"./components/Todos\";\nimport { AppState } from \"./types\";\n\nconst useStore = create<AppState>(\n  persist(\n    (set) => ({\n      todos: [],\n      setTodos: (todos) => set({ todos }),\n      filter: \"All\",\n      setFilter: (filter) => set({ filter }),\n    }),\n    { name: \"todos\" }\n  )\n);\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col items-center\">\n      <Header useStore={useStore} />\n      <Todos useStore={useStore} />\n      <Footer useStore={useStore} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}